{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alvar\\\\OneDrive\\\\Documentos\\\\Alvaro\\\\Programacion\\\\Node\\\\fullstack-repository\\\\part1\\\\exercise-part1-a\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Header\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 23\n}, this);\n\n_c = Header;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: [\" \", props.text, \" \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n/**\nconst Statistics = (good, neutral, bad, all, avergage, positive) => {\n  return(\n    <div>\n      <h2>Statistics</h2>\n\n    <div>\n      <Statistics text=\"good\" value={good}/>  \n      <Statistics text=\"neutral\" value={neutral}/>\n      <Statistics text=\"bad\" value={bad}/>\n      <Statistics text=\"all\" value={all}/>\n      <Statistics text=\"average\" value={avergage}/>\n      <Statistics text=\"positive\" value={positive}/>\n\n    </div>  \n    \n    </div>\n\n    )\n}\n\n*/\n\n\n_c2 = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  const avergage = (good - bad) / all;\n  const positive = good / all; //const  [avergage, setAverage] = useState(0)\n\n  const setToValueGood = newValue => {\n    console.log(\"value now\", newValue);\n    setGood(newValue);\n  };\n\n  const setToValueNeutral = newValue => {\n    console.log(\"value now\", newValue);\n    setNeutral(newValue);\n  };\n\n  const setToValueBad = newValue => {\n    console.log(\"value now\", newValue);\n    setBad(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValueGood(good + 1),\n      text: \" Good \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValueNeutral(neutral + 1),\n      text: \" Neutral \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setToValueBad(bad + 1),\n      text: \" Bad \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n/**\n *    <Statistics\n        good={good} \n        bad={bad}\n        neutral={neutral}\n        all={all}\n        avergage={avergage}\n        positive={positive}\n        />\n */\n\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Header","Button","props","handleClick","text","App","good","setGood","neutral","setNeutral","bad","setBad","all","avergage","positive","setToValueGood","newValue","console","log","setToValueNeutral","setToValueBad"],"sources":["C:/Users/alvar/OneDrive/Documentos/Alvaro/Programacion/Node/fullstack-repository/part1/exercise-part1-a/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Header = () => (<h1>Header</h1>);\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}> {props.text} </button>\n)\n\n/**\nconst Statistics = (good, neutral, bad, all, avergage, positive) => {\n  return(\n    <div>\n      <h2>Statistics</h2>\n\n    <div>\n      <Statistics text=\"good\" value={good}/>  \n      <Statistics text=\"neutral\" value={neutral}/>\n      <Statistics text=\"bad\" value={bad}/>\n      <Statistics text=\"all\" value={all}/>\n      <Statistics text=\"average\" value={avergage}/>\n      <Statistics text=\"positive\" value={positive}/>\n\n    </div>  \n    \n    </div>\n\n    )\n}\n\n*/\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const all=good + neutral + bad\n  const avergage = (good - bad) / all\n  const positive = good / all\n\n  //const  [avergage, setAverage] = useState(0)\n\n  const setToValueGood = (newValue) => {\n    console.log(\"value now\", newValue)\n    setGood(newValue)\n  }\n  const setToValueNeutral = (newValue) => {\n    console.log(\"value now\", newValue)\n    setNeutral(newValue)\n  }\n\n  const setToValueBad= (newValue) => {\n    console.log(\"value now\", newValue)\n    setBad(newValue)\n  }\n\n  return (\n    <div>\n      <Header />\n\n      <Button handleClick={() => setToValueGood(good + 1)} text= \" Good \"/>\n      <Button handleClick={() => setToValueNeutral(neutral + 1 )} text= \" Neutral \"/>\n      <Button handleClick={() => setToValueBad(bad + 1)} text= \" Bad \"/>\n\n   \n\n    </div>\n  )\n}\n\n/**\n *    <Statistics\n        good={good} \n        bad={bad}\n        neutral={neutral}\n        all={all}\n        avergage={avergage}\n        positive={positive}\n        />\n */\nexport default App"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAG,mBAAO;EAAA;AAAA;EAAA;EAAA;EAAA;AAAA,QAAtB;;KAAMA,M;;AAEN,MAAMC,MAAM,GAAIC,KAAD,iBACb;EAAQ,OAAO,EAAEA,KAAK,CAACC,WAAvB;EAAA,gBAAsCD,KAAK,CAACE,IAA5C;AAAA;EAAA;EAAA;EAAA;AAAA,QADF;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MAzBMH,M;;AA0BN,MAAMI,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;EAEA,MAAMa,GAAG,GAACN,IAAI,GAAGE,OAAP,GAAiBE,GAA3B;EACA,MAAMG,QAAQ,GAAG,CAACP,IAAI,GAAGI,GAAR,IAAeE,GAAhC;EACA,MAAME,QAAQ,GAAGR,IAAI,GAAGM,GAAxB,CARgB,CAUhB;;EAEA,MAAMG,cAAc,GAAIC,QAAD,IAAc;IACnCC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAzB;IACAT,OAAO,CAACS,QAAD,CAAP;EACD,CAHD;;EAIA,MAAMG,iBAAiB,GAAIH,QAAD,IAAc;IACtCC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAzB;IACAP,UAAU,CAACO,QAAD,CAAV;EACD,CAHD;;EAKA,MAAMI,aAAa,GAAGJ,QAAD,IAAc;IACjCC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAzB;IACAL,MAAM,CAACK,QAAD,CAAN;EACD,CAHD;;EAKA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAMD,cAAc,CAACT,IAAI,GAAG,CAAR,CAAzC;MAAqD,IAAI,EAAE;IAA3D;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAMa,iBAAiB,CAACX,OAAO,GAAG,CAAX,CAA5C;MAA4D,IAAI,EAAE;IAAlE;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,MAAD;MAAQ,WAAW,EAAE,MAAMY,aAAa,CAACV,GAAG,GAAG,CAAP,CAAxC;MAAmD,IAAI,EAAE;IAAzD;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAtCD;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAjDML,G;;MAAAA,G;AAkDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}